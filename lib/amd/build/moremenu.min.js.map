{"version":3,"sources":["../src/moremenu.js"],"names":["Selectors","regions","moredropdown","morebutton","classes","dropdownitem","dropdownmoremenu","dropdowntoggle","hidden","active","nav","navlink","observed","autoCollapse","menu","maxHeight","parentNode","offsetHeight","moreDropdown","querySelector","moreButton","classList","remove","menuNodes","Array","from","children","reverse","forEach","item","contains","lastNode","removeChild","moveIntoMoreDropdown","dataset","forceintomoremenu","moveOutOfMoreDropdown","length","add","navNode","prepend","dropdownToggle","navLink","hasAttribute","setAttribute","append","currentAttribute","getAttribute","removeAttribute","insertBefore","window","addEventListener","on","querySelectorAll","dropdown","innerMenu","e","toggle","stopPropagation"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Moves wrapping navigation items into a more menu.\n *\n * @module     core/moremenu\n * @package    core\n * @copyright  2021 Moodle\n * @author     Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\n/**\n * Moremenu selectors.\n */\nconst Selectors = {\n    regions: {\n        moredropdown: '[data-region=\"moredropdown\"]',\n        morebutton: '[data-region=\"morebutton\"]'\n    },\n    classes: {\n        dropdownitem: 'dropdown-item',\n        dropdownmoremenu: 'dropdownmoremenu',\n        dropdowntoggle: 'dropdown-toggle',\n        hidden: 'd-none',\n        active: 'active',\n        nav: 'nav',\n        navlink: 'nav-link',\n        observed: 'observed',\n    }\n};\n\n/**\n * Auto Collapse navigation items that wrap into a dropdown menu.\n *\n * @param {HTMLElement} menu The navbar container.\n */\nconst autoCollapse = menu => {\n\n    const maxHeight = menu.parentNode.offsetHeight + 1;\n\n    const moreDropdown = menu.querySelector(Selectors.regions.moredropdown);\n    const moreButton = menu.querySelector(Selectors.regions.morebutton);\n\n    // If the menu items wrap and the menu height is larger than the height of the\n    // parent then start pushing navlinks into the moreDropdown.\n    if (menu.offsetHeight > maxHeight) {\n\n        moreButton.classList.remove(Selectors.classes.hidden);\n\n        const menuNodes = Array.from(menu.children).reverse();\n        menuNodes.forEach(item => {\n            if (!item.classList.contains(Selectors.classes.dropdownmoremenu)) {\n                // After moving the menu items into the moreDropdown check again\n                // if the menu height is still larger then the height of the parent.\n                if (menu.offsetHeight > maxHeight) {\n                    const lastNode = menu.removeChild(item);\n                    // Move this node into the more dropdown menu.\n                    moveIntoMoreDropdown(menu, lastNode, true);\n                }\n            }\n        });\n    } else {\n        // If the menu height is smaller than the height of the parent, then try returning navlinks to the menu.\n\n        if ('children' in moreDropdown) {\n            const menuNodes = Array.from(moreDropdown.children);\n            menuNodes.forEach(item => {\n                // Don't move the node to the more menu if it is explicitly defined that\n                // this node should be displayed in the more dropdown menu at all times.\n                if (menu.offsetHeight < maxHeight && item.dataset.forceintomoremenu !== 'true') {\n                    const lastNode = moreDropdown.removeChild(item);\n                    // Move this node from the more dropdown menu into the main section of the menu.\n                    moveOutOfMoreDropdown(menu, lastNode);\n                }\n            });\n\n            // If there are no more menuNodes in the dropdown we can hide the moreButton.\n            if (menuNodes.length === 0) {\n                moreButton.classList.add(Selectors.classes.hidden);\n            }\n        }\n\n        if (menu.offsetHeight > maxHeight) {\n            autoCollapse(menu);\n        }\n    }\n    menu.parentNode.classList.add(Selectors.classes.observed);\n};\n\n/**\n * Move a node into the \"more\" dropdown menu.\n *\n * This method forces a given navigation node to be added and displayed within the \"more\" dropdown menu.\n *\n * @param {HTMLElement} menu The navbar moremenu.\n * @param {HTMLElement} navNode The navigation node.\n * @param {boolean} prepend Whether to prepend or append the node to the content in the more dropdown menu.\n */\nconst moveIntoMoreDropdown = (menu, navNode, prepend = false) => {\n    const moreDropdown = menu.querySelector(Selectors.regions.moredropdown);\n    const dropdownToggle = menu.querySelector('.' + Selectors.classes.dropdowntoggle);\n\n    const navLink = navNode.querySelector('.' + Selectors.classes.navlink);\n    if (navLink && !navLink.hasAttribute('role')) {\n        // Adding the menuitem role so the dropdown includes the\n        // accessibility improvements from theme/boost/amd/src/aria.js\n        navLink.setAttribute('role', 'menuitem');\n    }\n\n    // If there are navLinks that contain an active link in the moreDropdown\n    // make the dropdownToggle in the moreButton active.\n    if (navLink.classList.contains(Selectors.classes.active)) {\n        dropdownToggle.classList.add(Selectors.classes.active);\n    }\n\n    // Change the styling of the navLink to a dropdownitem and push it into\n    // the moreDropdown.\n    navLink.classList.remove(Selectors.classes.navlink);\n    navLink.classList.add(Selectors.classes.dropdownitem);\n    if (prepend) {\n        moreDropdown.prepend(navNode);\n    } else {\n        moreDropdown.append(navNode);\n    }\n};\n\n/**\n * Move a node out of the \"more\" dropdown menu.\n *\n * This method forces a given node from the \"more\" dropdown menu to be displayed in the main section of the menu.\n *\n * @param {HTMLElement} menu The navbar moremenu.\n * @param {HTMLElement} navNode The navigation node.\n */\nconst moveOutOfMoreDropdown = (menu, navNode) => {\n    const moreButton = menu.querySelector(Selectors.regions.morebutton);\n    const dropdownToggle = menu.querySelector('.' + Selectors.classes.dropdowntoggle);\n    const navLink = navNode.querySelector('.' + Selectors.classes.dropdownitem);\n\n    if (navLink) {\n        const currentAttribute = navLink.getAttribute('role');\n        if (currentAttribute === 'menuitem') {\n            navLink.removeAttribute('role');\n        }\n    }\n\n    // Stop displaying the active state on the dropdownToggle if\n    // the active navlink is removed.\n    if (navLink.classList.contains(Selectors.classes.active)) {\n        dropdownToggle.classList.remove(Selectors.classes.active);\n    }\n    navLink.classList.remove(Selectors.classes.dropdownitem);\n    navLink.classList.add(Selectors.classes.navlink);\n    menu.insertBefore(navNode, moreButton);\n};\n\n/**\n * Initialise the more menus.\n *\n * @param {HTMLElement} menu The navbar moremenu.\n */\nexport default menu => {\n    // Pre-populate the \"more\" dropdown menu with navigation nodes which are set to be displayed in this menu\n    // by default at all times.\n    if ('children' in menu) {\n        const moreButton = menu.querySelector(Selectors.regions.morebutton);\n        const menuNodes = Array.from(menu.children);\n        menuNodes.forEach((item) => {\n            if (!item.classList.contains(Selectors.classes.dropdownmoremenu) &&\n                    item.dataset.forceintomoremenu === 'true') {\n                // Append this node into the more dropdown menu.\n                moveIntoMoreDropdown(menu, item, false);\n                // After adding the node into the more dropdown menu, make sure that the more dropdown menu button\n                // is displayed.\n                if (moreButton.classList.contains(Selectors.classes.hidden)) {\n                    moreButton.classList.remove(Selectors.classes.hidden);\n                }\n            }\n        });\n    }\n    // Populate the more dropdown menu with additional nodes if necessary, depending on the current screen size.\n    autoCollapse(menu);\n\n    // When the screen size changes make sure the menu still fits.\n    window.addEventListener('resize', () => {\n        autoCollapse(menu);\n    });\n\n    // If there are dropdowns in the MoreMenu, add a new\n    // event listener to show the contents on click and prevent the\n    // moreMenu from closing.\n    $('.' + Selectors.classes.dropdownmoremenu).on('show.bs.dropdown', function () {\n        const moreDropdown = menu.querySelector(Selectors.regions.moredropdown);\n        moreDropdown.querySelectorAll('.dropdown').forEach((dropdown) => {\n            const innerMenu = dropdown.querySelector('[role=\"menu\"]');\n            dropdown.addEventListener('click', (e) => {\n                innerMenu.classList.toggle('show');\n                e.stopPropagation();\n            });\n        });\n    });\n};\n"],"file":"moremenu.min.js"}